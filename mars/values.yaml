redis:
  enabled: false
  master:
    persistence:
      enabled: false
  auth:
    password: "mars-redis-password"
  replica:
    replicaCount: 0

replicaCount: 2

metrics:
  enabled: true

image:
  repository: registry.cn-hangzhou.aliyuncs.com/duc-cnzj/mars
  pullPolicy: Always
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  annotations: {}

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

grpc:
  enabled: false
  service:
    enabled: false
    type: ClusterIP
    # if type eq "NodePort", nodePort works!
    # nodePort:
  ingress:
    enabled: false
    # className: ""
    annotations: {}
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    hosts: []
      # - host: mars.k8s.local
      #   paths:
      #     - path: /
      #       pathType: ImplementationSpecific
    tls: []
    #  - secretName: chart-example-tls
    #    hosts:
    #      - chart-example.local

service:
  type: ClusterIP
  # if type eq "NodePort", nodePort works!
  # nodePort: 

ingress:
  enabled: false
  # className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts: []
    # - host: mars.k8s.local
    #   paths:
    #     - path: /
    #       pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistent:
  storageClassName: ""
  enabled: false
  storage: 10Gi

conf: 
  debug: false
  profile_enabled: true
  log_channel: "zap"

  # 'sqlite' or 'mysql'
  db_driver: 'sqlite'
  # if 'mysql' All of the following are required
  db_database: mars
  db_host: xx.xx.xx.xx
  db_port: 3306
  db_username: root
  db_password: ""

  install_timeout: 90s

  external_ip: "xx.xx.xx.xx"

  domain_manager_plugin:
    name: default_domain_manager
  #  name: manual_domain_manager
  #  args:
  #    wildcard_domain: "*.mars.local"
  #    tls_key: ""
  #    tls_crt: ""
  #  name: cert-manager_domain_manager
  #  args:
  #    wildcard_domain: "*.mars.local"
  #    cluster_issuer: "letsencrypt-mars"

  gitlab_token: ""
  gitlab_baseurl: "https://gitlab.com/api/v4"
  picture_plugin:
    name: picture_bing
  #  name: picture_cartoon

  imagepullsecrets: []
    # - username: "jack"
    #   password: "12345"
    #   email: "jack@example.com"
      # server: "registry.cn-hangzhou.aliyuncs.com"

  admin_password: "123456"
  # oidc:
  # - name: "sso"
  #   enabled: true
  #   provider_url: "http://127.0.0.1:9001"
  #   client_id: "sso-xxx"
  #   client_secret: "xxx"
  #   redirect_url: "http://127.0.0.1:3000/auth/callback"

  private_key: |-
    -----BEGIN RSA PRIVATE KEY-----
    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
    -----END RSA PRIVATE KEY-----